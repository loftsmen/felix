@title Python C API unicode
@tangler unicode.flx = share/lib/python/unicode.flx
@h1 unicode
@tangle unicode.flx
// Nonfunction line: cdef extern from *:
// FUNCTION:     bint PyUnicode_Check(object o)
  gen PyUnicode_Check: PyObject -> bool;

// FUNCTION:     bint PyUnicode_CheckExact(object o)
  gen PyUnicode_CheckExact: PyObject -> bool;

// FUNCTION:     Py_ssize_t PyUnicode_GET_SIZE(object o)
  gen PyUnicode_GET_SIZE: PyObject -> Py_ssize_t;

// FUNCTION:     Py_ssize_t PyUnicode_GET_DATA_SIZE(object o)
  gen PyUnicode_GET_DATA_SIZE: PyObject -> Py_ssize_t;

// FUNCTION:     Py_UNICODE* PyUnicode_AS_UNICODE(object o)
  gen PyUnicode_AS_UNICODE: PyObject -> +char;

// FUNCTION:     char* PyUnicode_AS_DATA(object o)
  gen PyUnicode_AS_DATA: PyObject -> +char;

// FUNCTION:     bint Py_UNICODE_ISSPACE(Py_UCS4 ch)
  gen Py_UNICODE_ISSPACE: Py_UCS4 -> bool;

// FUNCTION:     bint Py_UNICODE_ISLOWER(Py_UCS4 ch)
  gen Py_UNICODE_ISLOWER: Py_UCS4 -> bool;

// FUNCTION:     bint Py_UNICODE_ISUPPER(Py_UCS4 ch)
  gen Py_UNICODE_ISUPPER: Py_UCS4 -> bool;

// FUNCTION:     bint Py_UNICODE_ISTITLE(Py_UCS4 ch)
  gen Py_UNICODE_ISTITLE: Py_UCS4 -> bool;

// FUNCTION:     bint Py_UNICODE_ISLINEBREAK(Py_UCS4 ch)
  gen Py_UNICODE_ISLINEBREAK: Py_UCS4 -> bool;

// FUNCTION:     bint Py_UNICODE_ISDECIMAL(Py_UCS4 ch)
  gen Py_UNICODE_ISDECIMAL: Py_UCS4 -> bool;

// FUNCTION:     bint Py_UNICODE_ISDIGIT(Py_UCS4 ch)
  gen Py_UNICODE_ISDIGIT: Py_UCS4 -> bool;

// FUNCTION:     bint Py_UNICODE_ISNUMERIC(Py_UCS4 ch)
  gen Py_UNICODE_ISNUMERIC: Py_UCS4 -> bool;

// FUNCTION:     bint Py_UNICODE_ISALPHA(Py_UCS4 ch)
  gen Py_UNICODE_ISALPHA: Py_UCS4 -> bool;

// FUNCTION:     bint Py_UNICODE_ISALNUM(Py_UCS4 ch)
  gen Py_UNICODE_ISALNUM: Py_UCS4 -> bool;

// FUNCTION:     Py_UCS4 Py_UNICODE_TOLOWER(Py_UCS4 ch)
  gen Py_UNICODE_TOLOWER: Py_UCS4 -> Py_UCS4;

// FUNCTION:     Py_UCS4 Py_UNICODE_TOUPPER(Py_UCS4 ch)
  gen Py_UNICODE_TOUPPER: Py_UCS4 -> Py_UCS4;

// FUNCTION:     Py_UCS4 Py_UNICODE_TOTITLE(Py_UCS4 ch)
  gen Py_UNICODE_TOTITLE: Py_UCS4 -> Py_UCS4;

// FUNCTION:     int Py_UNICODE_TODECIMAL(Py_UCS4 ch)
  gen Py_UNICODE_TODECIMAL: Py_UCS4 -> int;

// FUNCTION:     int Py_UNICODE_TODIGIT(Py_UCS4 ch)
  gen Py_UNICODE_TODIGIT: Py_UCS4 -> int;

// FUNCTION:     double Py_UNICODE_TONUMERIC(Py_UCS4 ch)
  gen Py_UNICODE_TONUMERIC: Py_UCS4 -> double;

// FUNCTION:     unicode PyUnicode_FromUnicode(Py_UNICODE *u, Py_ssize_t size)
  gen PyUnicode_FromUnicode: +char * Py_ssize_t -> PyObject;

// FUNCTION:     unicode PyUnicode_FromStringAndSize(const char *u, Py_ssize_t size)
  gen PyUnicode_FromStringAndSize: +char * Py_ssize_t -> PyObject;

// FUNCTION:     unicode PyUnicode_FromString(const char *u)
  gen PyUnicode_FromString: +char -> PyObject;

// FUNCTION:     unicode PyUnicode_FromOrdinal(int ordinal)
  gen PyUnicode_FromOrdinal: int -> PyObject;

// FUNCTION:     Py_UNICODE* PyUnicode_AsUnicode(object o) except NULL
  gen PyUnicode_AsUnicode: PyObject -> +char;

// FUNCTION:     Py_ssize_t PyUnicode_GetSize(object o) except -1
  gen PyUnicode_GetSize: PyObject -> Py_ssize_t;

// FUNCTION:     object PyUnicode_FromEncodedObject(object o, char *encoding, char *errors)
  gen PyUnicode_FromEncodedObject: PyObject * +char * +char -> PyObject;

// FUNCTION:     object PyUnicode_FromObject(object obj)
  gen PyUnicode_FromObject: PyObject -> PyObject;

// FUNCTION:     unicode PyUnicode_Concat(object left, object right)
  gen PyUnicode_Concat: PyObject * PyObject -> PyObject;

// FUNCTION:     list PyUnicode_Split(object s, object sep, Py_ssize_t maxsplit)
  gen PyUnicode_Split: PyObject * PyObject * Py_ssize_t -> PyObject;

// FUNCTION:     list PyUnicode_Splitlines(object s, bint keepend)
  gen PyUnicode_Splitlines: PyObject * bool -> PyObject;

// FUNCTION:     unicode PyUnicode_Translate(object str, object table, const char *errors)
  gen PyUnicode_Translate: PyObject * PyObject * +char -> PyObject;

// FUNCTION:     unicode PyUnicode_Join(object separator, object seq)
  gen PyUnicode_Join: PyObject * PyObject -> PyObject;

// Nonfunction line:     Py_ssize_t PyUnicode_Tailmatch(object str, object substr,
// Nonfunction line:                                    Py_ssize_t start, Py_ssize_t end, int direction) except -1
// FUNCTION:     Py_ssize_t PyUnicode_Find(object str, object substr, Py_ssize_t start, Py_ssize_t end, int direction) except -2
  gen PyUnicode_Find: PyObject * PyObject * Py_ssize_t * Py_ssize_t * int -> Py_ssize_t;

// FUNCTION:     Py_ssize_t PyUnicode_FindChar(object str, Py_UCS4 ch, Py_ssize_t start, Py_ssize_t end, int direction) except -2
  gen PyUnicode_FindChar: PyObject * Py_UCS4 * Py_ssize_t * Py_ssize_t * int -> Py_ssize_t;

// FUNCTION:     Py_ssize_t PyUnicode_Count(object str, object substr, Py_ssize_t start, Py_ssize_t end) except -1
  gen PyUnicode_Count: PyObject * PyObject * Py_ssize_t * Py_ssize_t -> Py_ssize_t;

// FUNCTION:     unicode PyUnicode_Replace(object str, object substr, object replstr, Py_ssize_t maxcount)
  gen PyUnicode_Replace: PyObject * PyObject * PyObject * Py_ssize_t -> PyObject;

// FUNCTION:     int PyUnicode_Compare(object left, object right) except? -1
  gen PyUnicode_Compare: PyObject * PyObject -> int;

// FUNCTION:     int PyUnicode_CompareWithASCIIString(object uni, char *string) except? -1
  gen PyUnicode_CompareWithASCIIString: PyObject * +char -> int;

// FUNCTION:     object PyUnicode_RichCompare(object left, object right, int op)
  gen PyUnicode_RichCompare: PyObject * PyObject * int -> PyObject;

// FUNCTION:     unicode PyUnicode_Format(object format, object args)
  gen PyUnicode_Format: PyObject * PyObject -> PyObject;

// FUNCTION:     int PyUnicode_Contains(object container, object element) except -1
  gen PyUnicode_Contains: PyObject * PyObject -> int;

// FUNCTION:     unicode PyUnicode_InternFromString(const char *v)
  gen PyUnicode_InternFromString: +char -> PyObject;

// FUNCTION:     object PyUnicode_Decode(char *s, Py_ssize_t size, char *encoding, char *errors)
  gen PyUnicode_Decode: +char * Py_ssize_t * +char * +char -> PyObject;

// Nonfunction line:     object PyUnicode_Encode(Py_UNICODE *s, Py_ssize_t size,
// Nonfunction line:                             char *encoding, char *errors)
// FUNCTION:     object PyUnicode_AsEncodedString(object unicode, char *encoding, char *errors)
  gen PyUnicode_AsEncodedString: PyObject * +char * +char -> PyObject;

// FUNCTION:     unicode PyUnicode_DecodeUTF8(char *s, Py_ssize_t size, char *errors)
  gen PyUnicode_DecodeUTF8: +char * Py_ssize_t * +char -> PyObject;

// FUNCTION:     unicode PyUnicode_DecodeUTF8Stateful(char *s, Py_ssize_t size, char *errors, Py_ssize_t *consumed)
  gen PyUnicode_DecodeUTF8Stateful: +char * Py_ssize_t * +char * &Py_ssize_t -> PyObject;

// FUNCTION:     bytes PyUnicode_EncodeUTF8(Py_UNICODE *s, Py_ssize_t size, char *errors)
  gen PyUnicode_EncodeUTF8: +char * Py_ssize_t * +char -> PyObject;

// FUNCTION:     bytes PyUnicode_AsUTF8String(object unicode)
  gen PyUnicode_AsUTF8String: PyObject -> PyObject;

// FUNCTION:     unicode PyUnicode_DecodeUTF16(char *s, Py_ssize_t size, char *errors, int *byteorder)
  gen PyUnicode_DecodeUTF16: +char * Py_ssize_t * +char * &int -> PyObject;

// FUNCTION:     unicode PyUnicode_DecodeUTF16Stateful(char *s, Py_ssize_t size, char *errors, int *byteorder, Py_ssize_t *consumed)
  gen PyUnicode_DecodeUTF16Stateful: +char * Py_ssize_t * +char * &int * &Py_ssize_t -> PyObject;

// FUNCTION:     bytes PyUnicode_EncodeUTF16(Py_UNICODE *s, Py_ssize_t size, char *errors, int byteorder)
  gen PyUnicode_EncodeUTF16: +char * Py_ssize_t * +char * int -> PyObject;

// FUNCTION:     bytes PyUnicode_AsUTF16String(object unicode)
  gen PyUnicode_AsUTF16String: PyObject -> PyObject;

// FUNCTION:     object PyUnicode_DecodeUnicodeEscape(char *s, Py_ssize_t size, char *errors)
  gen PyUnicode_DecodeUnicodeEscape: +char * Py_ssize_t * +char -> PyObject;

// FUNCTION:     object PyUnicode_EncodeUnicodeEscape(Py_UNICODE *s, Py_ssize_t size)
  gen PyUnicode_EncodeUnicodeEscape: +char * Py_ssize_t -> PyObject;

// FUNCTION:     object PyUnicode_AsUnicodeEscapeString(object unicode)
  gen PyUnicode_AsUnicodeEscapeString: PyObject -> PyObject;

// FUNCTION:     object PyUnicode_DecodeRawUnicodeEscape(char *s, Py_ssize_t size, char *errors)
  gen PyUnicode_DecodeRawUnicodeEscape: +char * Py_ssize_t * +char -> PyObject;

// FUNCTION:     object PyUnicode_EncodeRawUnicodeEscape(Py_UNICODE *s, Py_ssize_t size, char *errors)
  gen PyUnicode_EncodeRawUnicodeEscape: +char * Py_ssize_t * +char -> PyObject;

// FUNCTION:     object PyUnicode_AsRawUnicodeEscapeString(object unicode)
  gen PyUnicode_AsRawUnicodeEscapeString: PyObject -> PyObject;

// FUNCTION:     unicode PyUnicode_DecodeLatin1(char *s, Py_ssize_t size, char *errors)
  gen PyUnicode_DecodeLatin1: +char * Py_ssize_t * +char -> PyObject;

// FUNCTION:     bytes PyUnicode_EncodeLatin1(Py_UNICODE *s, Py_ssize_t size, char *errors)
  gen PyUnicode_EncodeLatin1: +char * Py_ssize_t * +char -> PyObject;

// FUNCTION:     bytes PyUnicode_AsLatin1String(object unicode)
  gen PyUnicode_AsLatin1String: PyObject -> PyObject;

// FUNCTION:     unicode PyUnicode_DecodeASCII(char *s, Py_ssize_t size, char *errors)
  gen PyUnicode_DecodeASCII: +char * Py_ssize_t * +char -> PyObject;

// FUNCTION:     bytes PyUnicode_EncodeASCII(Py_UNICODE *s, Py_ssize_t size, char *errors)
  gen PyUnicode_EncodeASCII: +char * Py_ssize_t * +char -> PyObject;

// FUNCTION:     bytes PyUnicode_AsASCIIString(object o)
  gen PyUnicode_AsASCIIString: PyObject -> PyObject;

// FUNCTION:     object PyUnicode_DecodeCharmap(char *s, Py_ssize_t size, object mapping, char *errors)
  gen PyUnicode_DecodeCharmap: +char * Py_ssize_t * PyObject * +char -> PyObject;

// FUNCTION:     object PyUnicode_EncodeCharmap(Py_UNICODE *s, Py_ssize_t size, object mapping, char *errors)
  gen PyUnicode_EncodeCharmap: +char * Py_ssize_t * PyObject * +char -> PyObject;

// FUNCTION:     object PyUnicode_AsCharmapString(object o, object mapping)
  gen PyUnicode_AsCharmapString: PyObject * PyObject -> PyObject;

// Nonfunction line:     object PyUnicode_TranslateCharmap(Py_UNICODE *s, Py_ssize_t size,
// Nonfunction line:                                       object table, char *errors)
// FUNCTION:     unicode PyUnicode_DecodeMBCS(char *s, Py_ssize_t size, char *errors)
  gen PyUnicode_DecodeMBCS: +char * Py_ssize_t * +char -> PyObject;

// FUNCTION:     unicode PyUnicode_DecodeMBCSStateful(char *s, Py_ssize_t size, char *errors, Py_ssize_t *consumed)
  gen PyUnicode_DecodeMBCSStateful: +char * Py_ssize_t * +char * &Py_ssize_t -> PyObject;

// FUNCTION:     bytes PyUnicode_EncodeMBCS(Py_UNICODE *s, Py_ssize_t size, char *errors)
  gen PyUnicode_EncodeMBCS: +char * Py_ssize_t * +char -> PyObject;

// FUNCTION:     bytes PyUnicode_AsMBCSString(object o)
  gen PyUnicode_AsMBCSString: PyObject -> PyObject;

// FUNCTION:     bytes PyUnicode_EncodeCodePage(int code_page, object unicode, const char *errors)
  gen PyUnicode_EncodeCodePage: int * PyObject * +char -> PyObject;

// FUNCTION:     size_t Py_UCS4_strlen(const Py_UCS4 *u)
  gen Py_UCS4_strlen: +Py_UCS4 -> size;

// FUNCTION:     Py_UCS4* Py_UCS4_strcpy(Py_UCS4 *s1, const Py_UCS4 *s2)
  gen Py_UCS4_strcpy: +Py_UCS4 * +Py_UCS4 -> +Py_UCS4;

// FUNCTION:     Py_UCS4* Py_UCS4_strncpy(Py_UCS4 *s1, const Py_UCS4 *s2, size_t n)
  gen Py_UCS4_strncpy: +Py_UCS4 * +Py_UCS4 * size -> +Py_UCS4;

// FUNCTION:     Py_UCS4* Py_UCS4_strcat(Py_UCS4 *s1, const Py_UCS4 *s2)
  gen Py_UCS4_strcat: +Py_UCS4 * +Py_UCS4 -> +Py_UCS4;

// FUNCTION:     int Py_UCS4_strcmp(const Py_UCS4 *s1, const Py_UCS4 *s2)
  gen Py_UCS4_strcmp: +Py_UCS4 * +Py_UCS4 -> int;

// FUNCTION:     int Py_UCS4_strncmp(const Py_UCS4 *s1, const Py_UCS4 *s2, size_t n)
  gen Py_UCS4_strncmp: +Py_UCS4 * +Py_UCS4 * size -> int;

// FUNCTION:     Py_UCS4* Py_UCS4_strchr(const Py_UCS4 *s, Py_UCS4 c)
  gen Py_UCS4_strchr: +Py_UCS4 * Py_UCS4 -> +Py_UCS4;

// FUNCTION:     Py_UCS4* Py_UCS4_strrchr(const Py_UCS4 *s, Py_UCS4 c)
  gen Py_UCS4_strrchr: +Py_UCS4 * Py_UCS4 -> +Py_UCS4;
@
