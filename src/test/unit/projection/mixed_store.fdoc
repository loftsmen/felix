@title Mixed Standalon projections with typedefs
@h1 Test
Standalone projections crossing compact linear type
boundary, stores.
// nasty test case
@felix
typedef five = 5;
typedef eight = 8;
typedef t58 = five \* eight;
typedef t358 = 3 \* t58;
typedef t2358 = 2 \* t358;
typedef ti2358 = int * t2358;
typedef tii2358 = int * ti2358;

var x = (1,(2,(true\, (`1:3\,(`3:5\,`7:8)))));
var p1 = proj 1 of &tii2358;
var p2 = proj 1 of &ti2358;
var p3 = proj 1 of &t2358;
var p4 = proj 1 of _pclt<t2358,t358>;
var p5 = proj 1 of _pclt<t2358,t58>;

println$ (*(&x.p1))._strr;
println$ (*(&x.p1.p2))._strr;
println$ (*(&x.p1.p2.p3))._strr;
println$ (*(&x.p1.p2.p3.p4))._strr;
println$ (*(&x.p1.p2.p3.p4.p5))._strr;

println$ x._strr;
&x.p1.p2.p3.p4.p5 <- `6:8;
println$ x._strr;
&x.p1.p2.p3.p4 <- `2:5\,`5:8;
println$ x._strr;
&x.p1.p2.p3 <- `2:3\,(`1:5\,`4:8);
println$ x._strr;
&x.p1.p2 <- false\,(`1:3\,(`4:5\,`3:8));
println$ x._strr;
&x.p1 <- 99,(true\,(`2:3\,(`3:5\,`2:8)));
println$ x._strr;
&x <- 42,(99,(true\,(`2:3\,(`3:5\,`2:8))));
println$ x._strr;

@expect
(2,(true,(case 1 of 3,(case 3 of 5,case 7 of 8))))
(true,(case 1 of 3,(case 3 of 5,case 7 of 8)))
(case 1 of 3,(case 3 of 5,case 7 of 8))
(case 3 of 5,case 7 of 8)
case 7 of 8
(1,(2,(true,(case 1 of 3,(case 3 of 5,case 7 of 8)))))
(1,(2,(true,(case 1 of 3,(case 3 of 5,case 6 of 8)))))
(1,(2,(true,(case 1 of 3,(case 2 of 5,case 5 of 8)))))
(1,(2,(true,(case 2 of 3,(case 1 of 5,case 4 of 8)))))
(1,(2,(false,(case 1 of 3,(case 4 of 5,case 3 of 8)))))
(1,(99,(true,(case 2 of 3,(case 3 of 5,case 2 of 8)))))
(42,(99,(true,(case 2 of 3,(case 3 of 5,case 2 of 8)))))
@
